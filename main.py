import telebot
import passwords
from telebot import types
bot = telebot.TeleBot(passwords.key)

commands = {  # command description used in the "help" command
    'help '        : '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–º–∞–Ω–¥–∞—Ö',
    'start '       : '–ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å –±–æ—Ç–æ–º'
}
first_welcome = False


@bot.message_handler(commands=['start'])
def send_welcome(message):
    global first_welcome
    if (not first_welcome):
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, " + str(message.from_user.first_name)
                     + ", —ç—Ç–æ —Ç–≤–æ–π –ª–∏—á–Ω—ã–π HR –¥—Ä—É–≥! –Ø –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Ç–µ–±–µ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏")
        first_welcome = True
    button1 = types.InlineKeyboardButton(text = "1. ‚òï", callback_data = "coffee")
    button2 = types.InlineKeyboardButton(text = "2. ‚ùì", callback_data = "personnel administration")
    button3 = types.InlineKeyboardButton(text = "3. üïµÔ∏è‚Äç‚ôÇÔ∏è¬†", callback_data = "study")
    button4 = types.InlineKeyboardButton(text = "4. üìà¬†", callback_data = "grow")
    button5 = types.InlineKeyboardButton(text = "5. üì¥¬†", callback_data = "IT")
    button6 = types.InlineKeyboardButton(text = "6. üìõ", callback_data = "not found")
    markup = types.InlineKeyboardMarkup()
    markup.add(button1, button2, button3, button4, button5, button6)
    bot.send_message(message.chat.id, "–ß–µ–º —Ç–µ–±–µ –ø–æ–º–æ—á—å?\n"
                                      "1. –•–æ—á—É –≤—ã–ø–∏—Ç—å –∫–æ—Ñ–µ —Å –∫–æ–ª–ª–µ–≥–æ–π ‚òï\n"
                                      "2. –£ –º–µ–Ω—è –≤–æ–ø—Ä–æ—Å –ø–æ –∫–∞–¥—Ä–æ–≤–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—é ‚ùì\n"
                                      "3. –•–æ—á—É —É—á–∏—Ç—å—Å—è/—Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è üïµÔ∏è‚Äç‚ôÇÔ∏è¬†\n"
                                      "4. –•–æ—á—É —Ä–∞—Å—Ç–∏ –∏/–∏–ª–∏ –ø–µ—Ä–µ–º–µ—â–∞—Ç—å—Å—è –≤ –∫–æ–º–ø–∞–Ω–∏–∏ üìà¬†\n"
                                      "5. –£ –º–µ–Ω—è –≤–æ–ø—Ä–æ—Å –ø–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –∏–ª–∏ –ò–¢ –ø–æ–¥–¥–µ—Ä–∂–∫–µ üì¥¬†\n"
                                      "6. –Ø –Ω–µ –Ω–∞—à–µ–ª –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å üìõ\n", reply_markup=markup)

    bot_message = 5  # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π

    @bot.callback_query_handler(func=lambda call: True)
    def callback_query(call):
        if call.data == "start":
            send_welcome(message)

        if call.data =="coffee":
            from functions import coffee
            coffee(message.chat.id, bot, types)

        if call.data =="personnel administration":
            from functions import pers_adm
            nonlocal bot_message
            bot_message = pers_adm(message.chat.id, bot, types)

        if call.data == "KS":
            bot.delete_message(bot_message.chat.id, bot_message.message_id)
            from functions import KSorGPN_S
            KSorGPN_S(message.chat.id, bot, types, False)

        if call.data == "study":
            from functions import study
            study(message.chat.id, bot, types)

        if call.data == "perenosKS":
            from functions import perenosKS
            perenosKS(message.chat.id, bot, types)

        if call.data == "spravkaKS":
            from functions import spravkaKS
            spravkaKS(message.chat.id, bot, types)

        if call.data == "bolnichnyiKS":
            from functions import bolnichnyiKS
            bolnichnyiKS(message.chat.id, bot, types)

        if call.data == "komandirovkaKS":
            from functions import komandirovkaKS
            komandirovkaKS(message.chat.id, bot, types)

        if call.data == "GPN-S":
            bot.delete_message(bot_message.chat.id, bot_message.message_id)
            from functions import KSorGPN_S
            KSorGPN_S(message.chat.id, bot, types, True)

        if call.data == "perenosGPN_S":
            from functions import perenosGPN_S
            perenosGPN_S(message.chat.id, bot, types)

        if (call.data) == "spravkaGPN_S":
            from functions import komandirovkaGPN_S
            komandirovkaGPN_S(message.chat.id, bot, types)

        if (call.data) == "bolnichnyiGPN_S":
            from functions import komandirovkaGPN_S
            komandirovkaGPN_S(message.chat.id, bot, types)

        if (call.data) == "komandirovkaGPN_S":
            from functions import komandirovkaGPN_S
            komandirovkaGPN_S(message.chat.id, bot, types)

        if (call.data) == "Kakie vozm":
            from functions import vozmoznosti
            vozmoznosti(message.chat.id, bot, types)

        if (call.data) == "Samost":
            from functions import samost
            samost(message.chat.id, bot, types)

        if (call.data) == "Wanttoteach":
            from functions import wanttoteach
            wanttoteach(message.chat.id, bot, types)

        if (call.data) == "Kakponyat":
            from functions import kakponyat
            kakponyat(message.chat.id, bot, types)

        if (call.data) == "grow":
            from functions import grow
            grow(message.chat.id, bot, types)

        if (call.data) == "Vakansii":
            from functions import vakansii
            vakansii(message.chat.id, bot, types)

        if (call.data) == "VnytrPerehod":
            from functions import vnytr_perehod
            vnytr_perehod(message.chat.id, bot, types)

        if (call.data) == "OtherRol":
            from functions import other_rol
            grow(message.chat.id, bot, types)

        if (call.data) == "IndividPlan":
            from functions import grow
            grow(message.chat.id, bot, types)

bot.polling(none_stop=False, interval=0, timeout=20)